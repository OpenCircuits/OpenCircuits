"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[766],{1123:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Introduction/GettingStarted/Running","title":"Running","description":"---","source":"@site/../../../../docs/Introduction/GettingStarted/Running.md","sourceDirName":"Introduction/GettingStarted","slug":"/Introduction/GettingStarted/Running","permalink":"/Introduction/GettingStarted/Running","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenCircuits/OpenCircuits/edit/master/docs/Introduction/GettingStarted/Running.md","tags":[],"version":"current","frontMatter":{"title":"Running"},"sidebar":"introSidebar","previous":{"title":"Installation","permalink":"/Introduction/GettingStarted/Installation"},"next":{"title":"Adding new Components","permalink":"/Introduction/Guides/AddingNewComponents"}}');var t=i(2295),s=i(8002);const o={title:"Running"},l=void 0,a={},c=[{value:"Frontend",id:"frontend",level:2},{value:"Backend",id:"backend",level:2},{value:"Testing",id:"testing",level:2},{value:"Playwright Testing",id:"playwright-testing",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Linting",id:"linting",level:2},{value:"Docker",id:"docker",level:3}];function d(n){const e={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsxs)(e.p,{children:["To run OpenCircuits locally (after ",(0,t.jsx)(e.a,{href:"./Installation",children:"installing"}),"), simply run"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn start\n"})}),"\n",(0,t.jsxs)(e.p,{children:["And choose which application to run, (generally this would be ",(0,t.jsx)(e.code,{children:"digital"}),")"]}),"\n",(0,t.jsx)(e.p,{children:"The building process may take a few seconds but then your browser should open and any local changes you make to the code will automatically persist!"}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"backend",children:"Backend"}),"\n",(0,t.jsx)(e.p,{children:"While generally unnecessary unless you are working on an issue that involves backend communication, to run the backend locally - simply run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn build\n"})}),"\n",(0,t.jsxs)(e.p,{children:["And select ",(0,t.jsx)(e.code,{children:"server"}),"."]}),"\n",(0,t.jsx)(e.p,{children:"And then perform a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn start\n"})}),"\n",(0,t.jsxs)(e.p,{children:["And choose ",(0,t.jsx)(e.code,{children:"server"})," and it should start!"]}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:"If you run into"})," ",(0,t.jsx)(e.code,{children:"Failed to load sqlite instance: Binary was compiled with 'CGO_ENABLED=0', go-sqlite3 requires cgo to work. This is a stub"}),", you might need to do ",(0,t.jsx)(e.code,{children:"go env -w CGO_ENABLED=1"})]})}),"\n",(0,t.jsx)(e.admonition,{type:"warning",children:(0,t.jsxs)(e.p,{children:["IF YOU RUN INTO ",(0,t.jsx)(e.code,{children:'exec: "gcc": executable file not found in %PATH%'})," ON WINDOWS",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.a,{href:"https://medium.com/@yaravind/go-sqlite-on-windows-f91ef2dacfe",children:"CLICK HERE"})]})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(e.p,{children:"To test OpenCircuits locally, simply run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn test\n"})}),"\n",(0,t.jsx)(e.p,{children:"To view the coverage of all tests, run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn coverage\n"})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"playwright-testing",children:"Playwright Testing"}),"\n",(0,t.jsx)(e.p,{children:"Before running any Playwright tests, be sure to install the browser engines using"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npx install playwright\n"})}),"\n",(0,t.jsx)(e.p,{children:"Then use the command"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn test-e2e:digital\r\nyarn test-e2e:landing\n"})}),"\n",(0,t.jsx)(e.p,{children:"to run playwright tests for digital or landing respectively."}),"\n",(0,t.jsxs)(e.p,{children:["For more details on working with Playwright tests in OpenCircuits, ",(0,t.jsx)(e.a,{href:"../Guides/Playwright",children:"click here"})]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsx)(e.p,{children:"To run this documentation site locally, simply run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn docs\n"})}),"\n",(0,t.jsxs)(e.p,{children:["If you get the error ",(0,t.jsx)(e.code,{children:"TypeError: Cannot read property 'latest' of undefined"})," then run the command again."]}),"\n",(0,t.jsx)(e.p,{children:"To generate the documentation from jsdocs, run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn build:jsdocs\n"})}),"\n",(0,t.jsxs)(e.p,{children:["You can even run that command while ",(0,t.jsx)(e.code,{children:"yarn docs"})," is open in another window!"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"linting",children:"Linting"}),"\n",(0,t.jsx)(e.p,{children:"To lint locally, simply run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn lint\n"})}),"\n",(0,t.jsx)(e.p,{children:"Convenientally, eslint supports automatically fixing some issues. To do this, run"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"yarn lint:fix\n"})}),"\n",(0,t.jsx)(e.h3,{id:"docker",children:"Docker"}),"\n",(0,t.jsx)(e.p,{children:"To run OpenCircuits in docker, you need to build docker image from repository by running"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"docker build --rm -t opencircuits .\n"})}),"\n",(0,t.jsx)(e.p,{children:"After image created, you simply start container by running"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"docker run -p 8080:8080 opencircuits\n"})}),"\n",(0,t.jsxs)(e.p,{children:["You can change ",(0,t.jsx)(e.code,{children:"8080:8080"})," to expose different port from container."]}),"\n",(0,t.jsxs)(e.p,{children:["For example, to expose port 8081 from container, use ",(0,t.jsx)(e.code,{children:"8081:8080"})]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8002:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>l});var r=i(8431);const t={},s=r.createContext(t);function o(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);