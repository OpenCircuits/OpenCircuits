"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[820],{8002:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(8431);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},9148:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Introduction/Guides/Common issues with pull requests","title":"Common issues with pull requests","description":"1. Hardcoding values","source":"@site/../../../../docs/Introduction/Guides/Common issues with pull requests.md","sourceDirName":"Introduction/Guides","slug":"/Introduction/Guides/Common issues with pull requests","permalink":"/Introduction/Guides/Common issues with pull requests","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenCircuits/OpenCircuits/edit/master/docs/Introduction/Guides/Common issues with pull requests.md","tags":[],"version":"current","frontMatter":{},"sidebar":"introSidebar","previous":{"title":"Cheat Sheets","permalink":"/Introduction/Guides/CheatSheets"},"next":{"title":"Go Crash Course","permalink":"/Introduction/Guides/GoCrashCourse"}}');var t=s(2295),r=s(8002);const o={},l="Common issues with pull requests",c={},d=[];function u(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"common-issues-with-pull-requests",children:"Common issues with pull requests"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Hardcoding values"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you are hardcoding the same value over and over make a constant for it in Constants.ts and use that new constant instead"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Non-descript variable names"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure your variables names are descriptive"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Passing checks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Before submitting a PR make sure you run the tests (",(0,t.jsx)(n.code,{children:"yarn test"}),") to make sure everything is still working correctly after your changes"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Imports"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Before Submitting a PR consult the import style guide to make sure your order of imports adheres to it"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Please make sure the changes in your PR actually belong in your PR"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't make random or unnecessary changes that don't have anything to do with the issues your working on"}),"\n",(0,t.jsx)(n.li,{children:"If you\u2019re working on multiple issues you should have a separate branch and pull request for each issue"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run OpenCircuits"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure OpenCircuits still runs after the changes you've made and test out the changes you've made to ensure they are working"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Don't re-implement code"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you are unsure if some functionality already exists in the codebase you should ask rather attempting to re-implement it"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Comments"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If you think a peice of code will be hard for another person to understand make sure to write comments"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Stick to the code formatting around you"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"make sure the style and formatting of the code is the same before and after you've changed it"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Tabs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Don't submit a PR with tabs in it (any tabs should instead be 4 spaces)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Remove extraneous comments"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If your PR has comments that are no longer relevant to the code make sure to remove them"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Whitespace"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure there is no extra whitespace in your PR"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make sure you include a space after if"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Do ",(0,t.jsx)(n.code,{children:"if (bool)"})," not ",(0,t.jsx)(n.code,{children:"if(bool)"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make sure you have an space after each comment"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Do ",(0,t.jsx)(n.code,{children:'// "stuff"'})," not ",(0,t.jsx)(n.code,{children:'//"stuff"'})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You do not need to merge master unless there is a conflict"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You do not need to press the ",(0,t.jsx)(n.code,{children:"Update Branch"})," button (on Github) unless there is a merge conflict"]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);