"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[423],{138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"Other/References/GAuthSetup","title":"GAuth Setup","description":"In order to test with google, you\'ll need to create a web app with the sign-in API (https http8080.  Click \\"Create...\\" and this will give you a client ID and secret.  Save these somewhere in the following format and DO NOT commit them to the repo.","source":"@site/../../../../docs/Other/References/GAuthSetup.md","sourceDirName":"Other/References","slug":"/Other/References/GAuthSetup","permalink":"/Other/References/GAuthSetup","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenCircuits/OpenCircuits/edit/master/docs/Other/References/GAuthSetup.md","tags":[],"version":"current","frontMatter":{"title":"GAuth Setup"},"sidebar":"otherSidebar","previous":{"title":"Using NGSpice","permalink":"/Other/References/Analog/UsingNGSpice"},"next":{"title":"GCP Datastore Setup","permalink":"/Other/References/GCPDatastoreSetup"}}');var i=n(2295),r=n(8002);const s={title:"GAuth Setup"},c=void 0,a={},h=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["In order to test with google, you'll need to create a web app with the sign-in API (",(0,i.jsx)(t.a,{href:"https://developers.google.com/identity/sign-in/web/sign-in",children:"https://developers.google.com/identity/sign-in/web/sign-in"}),' click). Choose "New Project", give it a name,  give it a product name, and choose "Web browser".  For the "Authorized JavaScript Origins", enter: ',(0,i.jsx)(t.code,{children:"http://localhost:8080"}),'.  Click "Create..." and this will give you a client ID and secret.  Save these somewhere in the following format and DO NOT commit them to the repo.']}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'{\r\n    "id": "<client-id>.apps.googleusercontent.com",\r\n    "secret": "<secret>",\r\n    "redirectURL": "http://127.0.0.1:8080/auth/google"\r\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["To enable google sign-in, you must add the command-line flag ",(0,i.jsx)(t.code,{children:"-google_auth=<path-to-file>"}),"."]}),"\n",(0,i.jsx)(t.p,{children:'If this is working properly, clicking "sign in with google" in the "sign-in" pop up and you should be prompted without a window that asks you to sign in with your credentials.'})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8002:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var o=n(8431);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);