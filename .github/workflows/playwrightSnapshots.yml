# Adapted from https://mmazzarolo.com/blog/2022-09-09-visual-regression-testing-with-playwright-and-github-actions/#updating-the-snapshots-in-ci-with-a-pull-request-comment
# This workflow's goal is forcing an update of the reference snapshots used
# by Playwright tests. It runs whenever you post a new pull request comment
# that starts with "/update-snapshots". It can run for Linux (ubuntu-latest),
# Windows (windows-latest), or Mac (macos-latest). The second parameter contains
# the comma separated "-latest" postpended OS names to run. The rest of the
# parameters contain the names of the tests to update the screenshots for. For example,
# "/update-snapshots windows-latest,ubuntu-latest digital/desktop/shared/basicCircuit digital/mobile/shared/basicCircuit"
# will update the snapshots for Windows and Linux for the test located at
# ./playwright/digital/desktop/shared/basicCircuit.spec.ts and
# ./playwright/digital/mobile/shared/basicCircuit.spec.ts
# From a high-level perspective, it works like this:
# 1. Make sure the action was launched by a pull request comment that starts with "/update-snapshots"
# 2. Use the GitHub API to grab the information about the branch name of the pull request.
# 3. Update the Playwright snapshots for the specified tests on this branch.
# 4. Commit those updated snapshots to this branch with a name like "[CI] Update Snapshots windows-latest".
name: Update Snapshots

on:
  # GitHub does not have separate actions for pull request comments and issue comments:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_comment-use-issue_comment
  # This also means that getting the branch for this pr is not entirely trivial.
  issue_comment:
    types: [created]

jobs:
  updatesnapshots:
    # Run this job only on comments of pull requests that start with the "/update-snapshots" string
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/update-snapshots') }}
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      # Can only run one at a time otherwise the commit action can hit a bit of a race condition
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # Checkout and do a deep fetch to load all commit IDs
      - uses: actions/checkout@v2
        # The job level if statement isn't able to see matrix.os so we need to do it per step
        # Isn't necessarily required since the node script checks it all anyways, but since
        # the jobs can only run sequentially it is nice to optimize and skip unnecessary ones.
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        with:
          fetch-depth: 0 # Load all commits
          token: ${{ secrets.GITHUB_TOKEN }}
      # Query the GitHub api to get the name of this pr's branch
      - uses: actions/github-script@v6
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        id: get-branch-name
        with:
          result-encoding: string
          script: |
            const result = await github.rest.pulls.get({
              pull_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            return result.data.head.ref
      # Checkout the comment's branch
      - name: Fetch Branch
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        run: git fetch
      - name: Checkout Branch
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        run: git checkout ${{ steps.get-branch-name.outputs.result }}
      # Setup testing environment
      - uses: actions/setup-node@v2
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        with:
          node-version: "16.x"
      - name: Install dependencies
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        run: yarn
      - name: Install Playwright browsers
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        run: npx playwright install --with-deps
      # Update the snapshots based on the current UI
      - name: Update snapshots
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        # Passing in the command as an environment variable is more secure than as a parameter
        env:
          UPDATE_SNAPSHOTS_COMMAND: ${{ github.event.comment.body }}
        run: yarn playwright:ci --update-snapshots
      # Commit the changes to the pull request branch
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ contains(github.event.comment.body, matrix.os) }}
        with:
          commit_message: ${{ format('{0} {1}', '[CI] Update Snapshots', matrix.os) }}
